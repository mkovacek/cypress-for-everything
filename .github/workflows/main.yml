name: Main CI workflow

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # every day at midnight run E2E tests
  push:
    branches:
      - main
      - "*"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cache/Cypress
  CYPRESS_EMAIL_POST: ${{ secrets.CYPRESS_EMAIL_POST }}
  CYPRESS_EMAIL_PRE: ${{ secrets.CYPRESS_EMAIL_PRE }}
  CYPRESS_MAILSLURP_API_KEY: ${{ secrets.CYPRESS_MAILSLURP_API_KEY }}
  CACHE_VER: v03

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Install ⚙️ & Examples Matrix 🔧
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Download Config from S3 📥
        run: aws s3 sync s3://cypress-for-everything ./

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn and Node Modules 💾
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{env.CACHE_VER}}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{env.CACHE_VER}}-

      - name: Cache Cypress 💾
        id: cypress-cache
        uses: actions/cache@v2
        with:
          path: ${{env.CYPRESS_CACHE_FOLDER}}
          key: ${{ runner.os }}-cypress-${{env.CACHE_VER}}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cypress-${{env.CACHE_VER}}-

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Refresh Gmail Access Token 🔄
        run: yarn refreshGmailToken

      - name: Upload Config to S3 📤
        run: aws s3 sync ./cypress/plugins s3://cypress-for-everything/cypress/plugins --exclude "*.ts" --include "*.json"

      - name: Install dependencies 🔧
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Create Matrix Examples ⚡
        id: matrix
        run: yarn ts-node ./scripts/listExamples.ts

      ## from https://github.com/vercel/next.js/blob/canary/.github/workflows/build_test_deploy.yml#L28
      - name: Cache all Repo for next jobs 💾
        uses: actions/cache@v2
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}

  examplesTest:
    name: Test Example
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        example: ${{fromJson(needs.build.outputs.matrix)}}
    steps:
      - name: Restore Cache 💾
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: ls /home/runner/work/cypress-for-everything/cypress-for-everything/

      - run: ls /home/runner/work/cypress-for-everything/cypress-for-everything/.cache/

      - name: Test 🏗️
        id: cypress-test
        run: |
          cd examples/${{ matrix.example }}
          yarn test

      - name: Upload Video 📹
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: 📹 video ${{ matrix.example }}
          path: examples/${{ matrix.example }}/cypress/videos
          retention-days: 10

      - name: Store Report XML Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: report xml ${{ matrix.example }}
          path: report/*.xml
          retention-days: 1

  examplesResults:
    name: Result Examples 📊
    runs-on: ubuntu-latest
    needs: [build, examplesTest]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Install only packages needed for core
        run: yarn add -W ts-node

      - name: Downlod all Artifacts
        uses: actions/download-artifact@v2
        with:
          path: report

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: report

      - name: Merge all Reports
        run: |
          yarn merge

      - name: Publish Cypress E2E Report 📖
        uses: dorny/test-reporter@v1
        with:
          name: Cypress Tests Results 📖
          path: report.xml
          reporter: java-junit
